{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\james\\\\bootcamp\\\\Musician-Match\\\\musician-match\\\\client\\\\src\\\\pages\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport SkillsList from '../components/SkillsList';\nimport SkillForm from '../components/SkillForm';\nimport { QUERY_SINGLE_PROFILE, QUERY_ME } from '../utils/queries';\nimport Auth from '../utils/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  var _profile$skills;\n  const {\n    profileId\n  } = useParams();\n\n  // If there is no `profileId` in the URL as a parameter, execute the `QUERY_ME` query instead for the logged in user's information\n  const {\n    loading,\n    data\n  } = useQuery(profileId ? QUERY_SINGLE_PROFILE : QUERY_ME, {\n    variables: {\n      profileId: profileId\n    }\n  });\n\n  // Check if data is returning from the `QUERY_ME` query, then the `QUERY_SINGLE_PROFILE` query\n  const profile = (data === null || data === void 0 ? void 0 : data.me) || (data === null || data === void 0 ? void 0 : data.profile) || {};\n\n  // Use React Router's `<Navigate />` component to redirect to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data._id === profileId) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n  if (!(profile !== null && profile !== void 0 && profile.name)) {\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: 'font-sans',\n      children: \"Login to begin matching with other musicians\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"card-header\",\n      children: [profileId ? `${profile.name}'s` : 'Your', \" friends have endorsed these skills...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), ((_profile$skills = profile.skills) === null || _profile$skills === void 0 ? void 0 : _profile$skills.length) > 0 && /*#__PURE__*/_jsxDEV(SkillsList, {\n      skills: profile.skills,\n      isLoggedInUser: !profileId && true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"my-4 p-4\",\n      style: {\n        border: '1px dotted #1a1a1a'\n      },\n      children: /*#__PURE__*/_jsxDEV(SkillForm, {\n        profileId: profile._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"+qO3szEziX/CChFOT/h122X6Myk=\", false, function () {\n  return [useParams, useQuery];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","Navigate","useParams","useQuery","SkillsList","SkillForm","QUERY_SINGLE_PROFILE","QUERY_ME","Auth","jsxDEV","_jsxDEV","Profile","_s","_profile$skills","profileId","loading","data","variables","profile","me","loggedIn","getProfile","_id","to","fileName","_jsxFileName","lineNumber","columnNumber","children","name","className","skills","length","isLoggedInUser","style","border","_c","$RefreshReg$"],"sources":["C:/Users/james/bootcamp/Musician-Match/musician-match/client/src/pages/Profile.js"],"sourcesContent":["import React from 'react';\n\nimport { Navigate, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport SkillsList from '../components/SkillsList';\nimport SkillForm from '../components/SkillForm';\n\nimport { QUERY_SINGLE_PROFILE, QUERY_ME } from '../utils/queries';\n\nimport Auth from '../utils/auth';\n\nconst Profile = () => {\n  const { profileId } = useParams();\n\n  // If there is no `profileId` in the URL as a parameter, execute the `QUERY_ME` query instead for the logged in user's information\n  const { loading, data } = useQuery(\n    profileId ? QUERY_SINGLE_PROFILE : QUERY_ME,\n    {\n      variables: { profileId: profileId },\n    }\n  );\n\n  // Check if data is returning from the `QUERY_ME` query, then the `QUERY_SINGLE_PROFILE` query\n  const profile = data?.me || data?.profile || {};\n\n  // Use React Router's `<Navigate />` component to redirect to personal profile page if username is yours\n  if (Auth.loggedIn() && Auth.getProfile().data._id === profileId) {\n    return <Navigate to=\"/me\" />;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!profile?.name) {\n    return (\n      <h4 className={'font-sans'}>\n       Login to begin matching with other musicians \n      </h4>\n    );\n  }\n\n  return (\n    <div>\n      <h2 className=\"card-header\">\n        {profileId ? `${profile.name}'s` : 'Your'} friends have endorsed these\n        skills...\n      </h2>\n\n      {profile.skills?.length > 0 && (\n        <SkillsList\n          skills={profile.skills}\n          isLoggedInUser={!profileId && true}\n        />\n      )}\n\n      <div className=\"my-4 p-4\" style={{ border: '1px dotted #1a1a1a' }}>\n        <SkillForm profileId={profile._id} />\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}