{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\james\\\\bootcamp\\\\Musician-Match\\\\musician-match\\\\client\\\\src\\\\components\\\\Chat\\\\ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_MESSAGES_BY_CHATROOM, QUERY_ME } from '../../utils/queries';\nimport { SEND_NEW_MESSAGE, UPDATE_CHAT_ROOM } from '../../utils/mutations';\nimport Message from './Message';\n// import { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = () => {\n  _s();\n  var _messagesQuery$data, _meQuery$data;\n  const {\n    chatRoomId\n  } = useParams();\n  const messagesQuery = useQuery(QUERY_MESSAGES_BY_CHATROOM, {\n    variables: {\n      chatRoomId: chatRoomId\n    }\n  });\n  const meQuery = useQuery(QUERY_ME);\n  const [sendNewMessage, {\n    messageData,\n    messageError\n  }] = useMutation(SEND_NEW_MESSAGE);\n  const [updateChatRoom, {\n    roomData,\n    roomError\n  }] = useMutation(UPDATE_CHAT_ROOM);\n  if (messagesQuery.loading || meQuery.loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 16\n    }, this);\n  }\n  const messages = (_messagesQuery$data = messagesQuery.data) === null || _messagesQuery$data === void 0 ? void 0 : _messagesQuery$data.chatMessagesByChatRoomId;\n  const profile = (_meQuery$data = meQuery.data) === null || _meQuery$data === void 0 ? void 0 : _meQuery$data.me;\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let newMessage = document.getElementById('newMessage').value;\n    if (newMessage.trim() === '') {\n      alert(`Message must not be empty`);\n    }\n    try {\n      const {\n        data\n      } = await sendNewMessage({\n        variables: {\n          chatRoomId: chatRoomId,\n          senderId: profile === null || profile === void 0 ? void 0 : profile._id,\n          message: newMessage\n        },\n        onCompleted: data => {\n          try {\n            const {\n              data\n            } = updateChatRoom({\n              variables: {\n                chatRoomId: chatRoomId,\n                lastMessage: newMessage\n              }\n            });\n          } catch (err) {}\n        }\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), messages.map(message => {\n      return /*#__PURE__*/_jsxDEV(Message, {\n        message: message,\n        profile: profile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 24\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"newMessage\",\n          placeholder: \"message\",\n          name: \"newMessage\",\n          type: \"string\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-block btn-info\",\n          style: {\n            cursor: 'pointer'\n          },\n          type: \"submit\",\n          children: \"SEND\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatRoom, \"Mw5yLA57puANB5pijl83byRbfPI=\", false, function () {\n  return [useParams, useQuery, useQuery, useMutation, useMutation];\n});\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useParams","useQuery","useMutation","QUERY_MESSAGES_BY_CHATROOM","QUERY_ME","SEND_NEW_MESSAGE","UPDATE_CHAT_ROOM","Message","jsxDEV","_jsxDEV","ChatRoom","_s","_messagesQuery$data","_meQuery$data","chatRoomId","messagesQuery","variables","meQuery","sendNewMessage","messageData","messageError","updateChatRoom","roomData","roomError","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","messages","data","chatMessagesByChatRoomId","profile","me","handleSubmit","e","preventDefault","newMessage","document","getElementById","value","trim","alert","senderId","_id","message","onCompleted","lastMessage","err","console","error","map","onSubmit","id","placeholder","name","type","className","style","cursor","_c","$RefreshReg$"],"sources":["C:/Users/james/bootcamp/Musician-Match/musician-match/client/src/components/Chat/ChatRoom.js"],"sourcesContent":["import React from 'react'\nimport { useParams } from 'react-router-dom';\nimport { useQuery, useMutation } from '@apollo/client'\nimport { QUERY_MESSAGES_BY_CHATROOM, QUERY_ME } from '../../utils/queries';\nimport { SEND_NEW_MESSAGE, UPDATE_CHAT_ROOM } from '../../utils/mutations';\nimport Message from './Message';\n// import { useEffect } from 'react';\n\n\nconst ChatRoom = () => {\n    const { chatRoomId } = useParams();\n    const messagesQuery = useQuery(QUERY_MESSAGES_BY_CHATROOM, { variables: { chatRoomId: chatRoomId } });\n    const meQuery = useQuery(QUERY_ME);\n    const [sendNewMessage, { messageData, messageError }] = useMutation(SEND_NEW_MESSAGE);\n    const [updateChatRoom, { roomData, roomError }] = useMutation(UPDATE_CHAT_ROOM);\n\n\n    if (messagesQuery.loading || meQuery.loading) {\n        return <div>Loading...</div>;\n    }\n\n    const messages = messagesQuery.data?.chatMessagesByChatRoomId;\n    const profile = meQuery.data?.me;\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        let newMessage = document.getElementById('newMessage').value;\n        if (newMessage.trim() === '') {\n            alert(`Message must not be empty`);\n        }\n        try {\n            const { data }= await sendNewMessage({\n              variables: { chatRoomId: chatRoomId, senderId: profile?._id, message: newMessage },\n              onCompleted: (data) => {\n               try {\n                const { data }= updateChatRoom({\n                    variables: { chatRoomId: chatRoomId, lastMessage: newMessage },\n                })\n               } catch (err) {\n\n               }\n              },\n            });\n          \n          } catch (err) {\n            console.error(err);\n          }\n    };\n\n    return (\n        <div>\n            <h1>Chat Room</h1>\n            {messages.map((message) => {\n                return <Message\n                    message={message}\n                    profile={profile}\n                />\n            })}\n            <div>\n            <form onSubmit={handleSubmit} >\n                <input id=\"newMessage\" placeholder=\"message\" name=\"newMessage\" type=\"string\" />\n                <button className=\"btn btn-block btn-info\" style={{ cursor: 'pointer' }} type=\"submit\"\n                 >\n                    SEND\n                </button>\n            </form>\n            </div>\n        </div>\n    )\n}\n\nexport default ChatRoom;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}